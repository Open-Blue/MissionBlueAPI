"""
This type stub file was generated by pyright.
"""

ENCODING = ...
def buffered_hook_manager(header_template, get_pos, offset, cond_refresh, term): # -> SimpleNamespace:
    """Create and maintain a buffered hook manager, used for instrumenting print
    statements and logging.

    Args:
        header_template (): the template for enriching output
        get_pos (Callable[..., Any]): the container to retrieve the current position
        offset (int): the offset to add to the current position
        cond_refresh: Condition object to force a refresh when printing
        term: the current terminal

    Returns:
        a closure with several functions

    """
    class Hook(BaseHook):
        ...
    
    

class BaseHook:
    def __init__(self, stream) -> None:
        ...
    
    def __getattr__(self, item): # -> Any:
        ...
    


def passthrough_hook_manager(): # -> Callable[[], ...]:
    ...

def gen_header(header_template, get_pos, offset): # -> Callable[[], Any]:
    ...

