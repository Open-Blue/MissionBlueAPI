"""
This type stub file was generated by pyright.
"""

from typing import Callable

TimeDisplay = ...
RUN = ...
END = ...
ETA = ...
class Refresh:
    def tick(self) -> Refresh:
        ...
    


def time_display(seconds: float, conf: TimeDisplay) -> str:
    ...

def eta_text(seconds: float) -> str:
    ...

def fn_simple_eta(logic_total): # -> Callable[..., Any]:
    ...

def gen_simple_exponential_smoothing(alpha: float, fn: Callable[[float, float], float]): # -> Generator[float, Any, NoReturn]:
    """Implements a generator with a simple exponential smoothing of some function.
    Given alpha and y_hat (t-1), we can calculate the next y_hat:
        y_hat = alpha * y + (1 - alpha) * y_hat
        y_hat = alpha * y + y_hat - alpha * y_hat
        y_hat = y_hat + alpha * (y - y_hat)

    Args:
        alpha: the smoothing coefficient
        fn: the function

    Returns:

    """
    ...

